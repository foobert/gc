#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'rubygems'
require 'bundler/setup'

require 'cachecache'
require 'yaml'
require 'ostruct'

# TODO clean up config parsing once I figure out how I want to manage it
config_defaults = File.exist?('config.yml') ? YAML.load_file('config.yml') : {}
config = OpenStruct.new(config_defaults)
config.accessToken = ENV['GC_ACCESS_TOKEN'] if ENV['GC_ACCESS_TOKEN']
config.consumerKey = ENV['GC_CONSUMER_KEY'] if ENV['GC_CONSUMER_KEY']
config.user = ENV['GC_USER'] if ENV['GC_USER']
config.db = ENV['GC_DB'] if ENV['GC_DB']
config.log = ENV['GC_LOG'] if ENV['GC_LOG']

cacheCache = CacheCache2.new(config)

cmd = ARGV.shift
case cmd
when "login"
    cacheCache.login ARGV.shift
when "logs"
    ARGV.each {|username| cacheCache.update_logs username }
when "search"
    cacheCache.search_caches *ARGV.map {|x| x.to_f }
when "get"
    cacheCache.get ARGV
else
    puts "Usage: #{$0} CMD"
    puts "Where CMD is one of"
    puts
    puts "login"
    puts "search"
    puts "get"
    puts "logs"
end
# vi: ft=ruby
